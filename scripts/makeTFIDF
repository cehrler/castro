#!/usr/bin/perl

use strict;

my %indMat = ();
my @row = ();

my $numSpeeches;
my $numNEs;

my $line = <STDIN>;
chomp($line);

if ($line =~ m/^speeches:(.*)$/ )
{
	print $line."\n";
	$numSpeeches = $1;
	
	$line = <STDIN>;
	chomp($line);
	
	print $line."\n";
	if ($line =~ m/^NEs:(.*)$/ )
	{
		$numNEs = $1;
	}
	else { die "Second line $line has incorrect format"; }
}
else { die "First line $line has incorrect format"; }

my @sum = ();
my @numDocsPerNE = ();

for (my $i = 0; $i < $numSpeeches; $i++)
{
	$sum[$i] = 0;
}

for (my $i = 0; $i < $numNEs; $i++)
{
	$numDocsPerNE[$i] = 0;
}

while ($line = <STDIN>)
{
	chomp($line);
	if ($line =~ m/^\(([0-9]+),([0-9]+)\)=([0-9]+)$/)
	{
		$numDocsPerNE[$2]++;
		$indMat{"$1,$2"} = $3;
	}
	else
	{
		die "Line doesn't match: $line";
	}
}

my $logTerm;

foreach my $key (keys %indMat)
{
	if ($key =~ m/^([0-9]+),([0-9]+)/)
	{
		if ($numDocsPerNE[$2] <= 3)
		{
			$logTerm = 1;
		}
		else
		{
			$logTerm = log($numSpeeches / $numDocsPerNE[$2])
		}
		$indMat{$key} = $indMat{$key} * $logTerm;
		$sum[$1] += $indMat{$key};
	}
	else { die "key doesn't match: $key"; }
}

foreach my $key (keys %indMat)
{
	if ($key =~ m/^([0-9]+),([0-9]+)/)
	{
		print "($key)=".($indMat{$key} / $sum[$1])."\n";		
	}
	else { die "key doesn't match: $key"; }
}

